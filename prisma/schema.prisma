

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String?
  emailVerified DateTime?
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  inventoryLists InventoryList[]

  Account Account[]

  Session Session[]
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model InventoryList {
  id      String  @id @default(uuid())
  name    String
  userId  String
  description String?
  user    User    @relation(fields: [userId], references: [id])
  items   Item[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Item {
  id              String  @id @default(uuid())
  name            String
  description     String?
  quantity        Int
  inventoryListId String
  inventoryList   InventoryList @relation(fields: [inventoryListId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}